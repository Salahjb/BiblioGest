// <auto-generated />
using System;
using BiblioGest.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiblioGest.Migrations
{
    [DbContext(typeof(BiblioDbContext))]
    partial class BiblioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BiblioGest.Models.Adherent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("EstActif")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Adherents");
                });

            modelBuilder.Entity("BiblioGest.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Œuvres de fiction en prose",
                            Nom = "Roman"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fiction basée sur des avancées scientifiques",
                            Nom = "Science-Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Récit de vie d'une personne",
                            Nom = "Biographie"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Livres techniques sur l'informatique",
                            Nom = "Informatique"
                        });
                });

            modelBuilder.Entity("BiblioGest.Models.Emprunt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdherentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEmprunt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateRetourEffective")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRetourPrevue")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LivreISBN")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AdherentId");

                    b.HasIndex("LivreISBN");

                    b.ToTable("Emprunts");
                });

            modelBuilder.Entity("BiblioGest.Models.Livre", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AnneePublication")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Editeur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("NombreExemplaires")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ISBN");

                    b.HasIndex("CategorieId");

                    b.ToTable("Livres");

                    b.HasData(
                        new
                        {
                            ISBN = "9782070368228",
                            AnneePublication = 1942,
                            Auteur = "Albert Camus",
                            CategorieId = 1,
                            Editeur = "Gallimard",
                            NombreExemplaires = 5,
                            Titre = "L'Étranger"
                        },
                        new
                        {
                            ISBN = "9782266252584",
                            AnneePublication = 1951,
                            Auteur = "Isaac Asimov",
                            CategorieId = 2,
                            Editeur = "Pocket",
                            NombreExemplaires = 3,
                            Titre = "Fondation"
                        });
                });

            modelBuilder.Entity("BiblioGest.Models.Emprunt", b =>
                {
                    b.HasOne("BiblioGest.Models.Adherent", "Adherent")
                        .WithMany("Emprunts")
                        .HasForeignKey("AdherentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiblioGest.Models.Livre", "Livre")
                        .WithMany("Emprunts")
                        .HasForeignKey("LivreISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adherent");

                    b.Navigation("Livre");
                });

            modelBuilder.Entity("BiblioGest.Models.Livre", b =>
                {
                    b.HasOne("BiblioGest.Models.Categorie", "Categorie")
                        .WithMany("Livres")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("BiblioGest.Models.Adherent", b =>
                {
                    b.Navigation("Emprunts");
                });

            modelBuilder.Entity("BiblioGest.Models.Categorie", b =>
                {
                    b.Navigation("Livres");
                });

            modelBuilder.Entity("BiblioGest.Models.Livre", b =>
                {
                    b.Navigation("Emprunts");
                });
#pragma warning restore 612, 618
        }
    }
}
